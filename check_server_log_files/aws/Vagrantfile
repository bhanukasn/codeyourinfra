# -*- mode: ruby -*-
# vi: set ft=ruby :

load File.join("..", "..", "common", "timestamp-appender.rb")

provisioning_option = ENV['PROVISIONING_OPTION'] || "fried"
if provisioning_option != "baked" && provisioning_option != "fried"
  puts 'PROVISIONING_OPTION must be \'baked\' or \'fried\'.'
  abort
end

if provisioning_option == "baked"
  aws_region = "sa-east-1"
else
  aws_region = ENV['AWS_REGION'] || ENV['EC2_REGION'] || "sa-east-1"
end
relative_path = File.join("..", "..", "cloud", "aws", aws_region)
security_group  = JSON.parse(File.read(File.join(relative_path, "security-group.json")))
subnet = JSON.parse(File.read(File.join(relative_path, "subnet.json")))
ubuntu_ami = JSON.parse(File.read(File.join(relative_path, "ubuntu-ami.json")))

Vagrant.configure("2") do |config|
  config.vm.box = "dummy"
  config.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"
  config.vm.synced_folder ".", "/vagrant", disabled: true

  config.vm.define "jenkins" do |jenkins|
    jenkins.vm.provider "aws" do |aws, override|
      aws.region = aws_region
      if provisioning_option == "baked"
        aws.ami = "ami-2f6b2a43"
      else
        aws.ami = ubuntu_ami['ami_id']
      end
      aws.instance_type = "t2.micro"
      aws.keypair_name = "codeyourinfra-aws-key"
      aws.security_groups = security_group['group_id']
      aws.subnet_id = subnet['id']
      aws.tags = {"Name" => "jenkins", "Solution" => "check_server_log_files"}
      override.ssh.username = "ubuntu"
      override.ssh.private_key_path = File.join(relative_path, "codeyourinfra-aws-key.pem")
      override.nfs.functional = false
    end
    if provisioning_option == "fried"
      jenkins.vm.provision "ansible" do |ansible|
        ansible.playbook = File.join("..", "playbook-jenkins.yml")
      end
    end
  end
end
